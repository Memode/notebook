{"version":3,"sources":["container/manage/manage.js","components/menubar/menubar.js","static/images/add-icon.svg","static/images/staff-icon.svg","static/images/capacity-icon.svg","static/images/dept-icon.svg","static/images/mv-user-icon.svg","components/modals/cdmodal.js","components/modals/tbrmodal.js"],"names":["__webpack_require__","_reactRedux","_reactRouterDom","_userReducer","_employeeModalReducer","Personal","_reactLoadable2","default","loader","e","then","t","bind","loading","Employee","Employeeall","DEmployeeall","Promise","all","Capacity","_react2","createElement","_rheader2","className","_menubar2","Manage","connect","state","_objectSpread","loginUser","userReducer","employeeModalState","employeeModalReducer","deptReducer","fetchUserData","toggleModalState","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","getRoleState","React","Component","props","document","title","enterpriseName","match","_ref","_ref2","Switch","Route","path","concat","exact","component","userRole","activePerson","_ref3","_antd","_deptReducer","SubMenu","Menu","MenuItem","Item","MenuItemGroup","ItemGroup","alt","src","deptIcon","Link","to","staffIcon","capacityIcon","addIcon","mvUserIcon","_cdmodal2","_tbrmodal2","trType","mtitle","Menubar","getDeptList","setCurrentDept","withRouter","cdAnddlbool","menuSelectedKeys","menuOpenKeys","createDept","_assertThisInitialized","rightTransfer","selectDept","dept","key","indexOf","setState","cd","deptList","filter","d","departmentId","type","nextProps","tp","length","currentDept","_this2","mode","theme","openKeys","selectedKeys","onTitleClick","params","map","i","onClick","pathname","name","_ref4","_ref5","_ref6","_ref7","_ref8","createDeptModalVisible","_ref9","transferBRightModalVisible","_ref10","module","exports","p","CDModal","deptname","handleOk","handleCancel","http","post","parentId","deptName","res","status","Modal","success","centered","content","_this3","width","visible","onCancel","footer","Button","Input","placeholder","onChange","target","value","_common","_staffReducer","message","config","top","TRModal","mEmployee","staffReducer","getMEL","isAllocation","limit","page","employeeArray","lastPage","total","selectedUserArray","userId","transferRight","getMore","changgeSort","getEmployee","id","error","moveUserId","moveType","moveDeptId","setTimeout","authTimeout","np","propsChange","object","console","log","list","currentPage","newEmployeeArray","flag","userRoleInfos","some","role","roleName","isEM","Radio","Group","style"],"mappings":"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","file":"static/js/6.39be280b.chunk.js","sourcesContent":["import React from 'react'\r\nimport Rheader from 'components/rheader/rheader'\r\nimport './manage.scss'\r\nimport {connect} from 'react-redux'\r\nimport {Route,Switch} from 'react-router-dom'\r\nimport Loadable from 'react-loadable';\r\nimport {fetchUserData} from 'store/userReducer'\r\nimport {toggleModalState} from 'store/employeeModalReducer'\r\nimport Menubar from 'components/menubar/menubar'\r\n\r\nconst Personal = Loadable({loader: () => import('components/personal/personal'),loading() {return null}})\r\nconst Employee = Loadable({loader: () => import('container/employee/employee'),loading() {return null}})\r\nconst Employeeall = Loadable({loader: () => import('container/employeeall/employee'),loading() {return null}})\r\nconst DEmployeeall = Loadable({loader: () => import('container/demployee/employee'),loading() {return null}})\r\nconst Capacity = Loadable({loader: () => import('container/capacity/capacity'),loading() {return null}})\r\n//引入多个reducer\r\n@connect(\r\n    state=>{\r\n        return{\r\n            loginUser:state.userReducer,\r\n            employeeModalState:state.employeeModalReducer,\r\n            ...state.deptReducer\r\n        }\r\n    },\r\n    {fetchUserData,toggleModalState}\r\n)\r\nclass Manage extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            getRoleState:true\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchUserData()\r\n        //设置title\r\n        document.title=this.props.loginUser.enterpriseName!==''?this.props.loginUser.enterpriseName:''\r\n    }\r\n    render(){\r\n        const {match}=this.props\r\n        return (\r\n            <div className=\"page-container\">\r\n                <Rheader/>\r\n                <div className=\"container-wrapper\">\r\n                    <div className=\"menu-wrapper\">\r\n                        <Menubar/>\r\n                    </div>\r\n                    <div className=\"data-wrapper\">\r\n                        <Switch>\r\n                            <Route path={`${match.path}/`} exact component={this.props.loginUser.userRole==='enterprise'?Employee:DEmployeeall} />\r\n                            <Route path={`${match.path}/eall`}   component={Employeeall} />\r\n                            <Route path={`${match.path}/capacity`}   component={Capacity}></Route>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n                {/* 展示员工详情 */}\r\n                {this.props.activePerson?<Personal/>:null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Manage","import React from 'react'\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport './menubar.scss'\r\nimport {Menu,Icon} from 'antd'\r\nimport addIcon from 'static/images/add-icon.svg'\r\nimport staffIcon from 'static/images/staff-icon.svg'\r\nimport capacityIcon from 'static/images/capacity-icon.svg'\r\nimport deptIcon from 'static/images/dept-icon.svg'\r\nimport mvUserIcon from 'static/images/mv-user-icon.svg'\r\nimport {connect} from 'react-redux'\r\nimport CDModal from 'components/modals/cdmodal'\r\nimport TBRModal from 'components/modals/tbrmodal'\r\nimport {toggleModalState} from 'store/employeeModalReducer'\r\nimport {setCurrentDept,getDeptList} from 'store/deptReducer'\r\n\r\nconst SubMenu=Menu.SubMenu\r\nconst MenuItem=Menu.Item\r\nconst MenuItemGroup=Menu.ItemGroup\r\n\r\n@connect(\r\n    state=>{\r\n        return{\r\n            loginUser:state.userReducer,\r\n            ...state.deptReducer,\r\n            employeeModalState:state.employeeModalReducer\r\n        }\r\n    },\r\n    {getDeptList,toggleModalState,setCurrentDept}\r\n)\r\n@withRouter\r\nclass Menubar extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            //currentDept和deptList是否存在\r\n            cdAnddlbool:false,\r\n            menuSelectedKeys:'',\r\n            menuOpenKeys:''\r\n        }\r\n        this.createDept=this.createDept.bind(this)\r\n        this.rightTransfer=this.rightTransfer.bind(this)\r\n        this.selectDept=this.selectDept.bind(this)\r\n    }\r\n    //点击部门名称，进入部门详情（也就是部门人员列表）\r\n    selectDept(dept){\r\n        if(dept.key==='depts'){\r\n            //点击部门管理submenu(默认就不点击子menu了)\r\n            this.state.menuOpenKeys==='' || this.state.menuOpenKeys.indexOf('deptless')>-1?this.setState({menuOpenKeys:'depts'}):this.setState({menuOpenKeys:''})\r\n        }else if(dept.key.indexOf(\"deptless\")===-1){\r\n            //点击部门列表\r\n            let cd=this.props.deptList.filter((d)=>{\r\n                //dept.key是string，d.departmentId是number\r\n                return dept.key==d.departmentId\r\n            })\r\n            this.props.setCurrentDept(cd[0])\r\n            this.setState({menuOpenKeys:'depts'})\r\n        }else{\r\n            //点击人员管理和容量管理\r\n            this.setState({menuSelectedKeys:dept.key})\r\n            this.setState({menuOpenKeys:dept.key})\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        //第一次加载的时候\r\n        if(!this.props.deptList && this.props.loginUser.userRole!==''){\r\n            this.props.getDeptList({type:this.props.loginUser.userRole})\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        //console.log(this.props)\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        const tp=this.props\r\n        // console.log(tp)\r\n        // console.log(nextProps)\r\n        this.setState({cdAnddlbool:nextProps.deptList!==null&& nextProps.deptList.length>0 && nextProps.currentDept!==null})\r\n        if(tp.loginUser.userRole==='' && nextProps.loginUser.userRole!==''){\r\n            tp.getDeptList({type:nextProps.loginUser.userRole})\r\n        }\r\n        if(!tp.currentDept && nextProps.currentDept){\r\n            // console.log('第一次进入部门列表')\r\n            this.setState({menuSelectedKeys:nextProps.currentDept.departmentId+''})\r\n            nextProps.setCurrentDept(nextProps.currentDept)\r\n            this.setState({menuOpenKeys:'depts'})\r\n        }else if(tp.currentDept && nextProps.currentDept && tp.currentDept.departmentId!==nextProps.currentDept.departmentId){\r\n            // console.log('切换部门列表')\r\n            this.setState({menuSelectedKeys:nextProps.currentDept.departmentId+''})\r\n            nextProps.setCurrentDept(nextProps.currentDept)\r\n        }else if(!nextProps.currentDept && nextProps.deptList && nextProps.deptList.length>0){\r\n            // console.log('部门主管刷新时')\r\n            this.setState({menuSelectedKeys:nextProps.deptList[0].departmentId+''})\r\n            nextProps.setCurrentDept(nextProps.deptList[0])\r\n            this.setState({cdAnddlbool:true})\r\n            this.setState({menuOpenKeys:'depts'})\r\n        }\r\n        if(tp.deptList && tp.deptList.length!==nextProps.deptList.length && nextProps.deptList.length>0){\r\n            // console.log('删除部门之后打开第一个menu')\r\n            this.setState({menuSelectedKeys:nextProps.deptList[0].departmentId+''})\r\n            nextProps.setCurrentDept(nextProps.deptList[0])\r\n        }\r\n        \r\n    }\r\n    //创建部门\r\n    createDept(){\r\n        this.props.toggleModalState('CREATE_DEPT',true)\r\n    }\r\n\r\n    rightTransfer(){\r\n        this.props.toggleModalState('TRANSFER_B_RIGHT',true)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"menubar\">\r\n                <div className=\"role\">{this.props.loginUser.userRole==='department'?'部门管理':'企业管理'}</div>\r\n                {/**企业管理menu 和部门管理menu，默认打开第一个部门 */}\r\n                {this.props.loginUser.userRole==='enterprise'?\r\n                <div>\r\n                    <Menu mode=\"inline\" theme=\"light\" openKeys={[this.state.menuOpenKeys]} selectedKeys={[this.state.menuSelectedKeys]}>\r\n                        {this.state.cdAnddlbool?(\r\n                            <SubMenu onTitleClick={params=>this.selectDept(params)}  key=\"depts\" title={<span><img alt='' className=\"icon\" src={deptIcon}/>部门管理</span>}>\r\n                                {<MenuItemGroup key=\"d1\">\r\n                                    {this.props.deptList.map((d,i)=>{\r\n                                        //return <MenuItem onClick={params=>this.selectDept(params)} key={d.departmentId}>{d.name}</MenuItem>\r\n                                        return (<MenuItem onClick={params=>this.selectDept(params)} key={d.departmentId}>\r\n                                            <Link to={{pathname:`/manage`}}>{d.name}</Link></MenuItem>)\r\n                                        // return (<MenuItem onClick={params=>this.selectDept(params)} key={d.departmentId}>\r\n                                        //     <Link to={`/manage/${d.departmentId}`}>{d.name}</Link></MenuItem>)\r\n                                    })}\r\n                                    \r\n                                </MenuItemGroup>}\r\n                            </SubMenu>\r\n                        ):null}\r\n                        <MenuItem onClick={params=>this.selectDept(params)} key=\"deptless-1\"><Link to={`/manage/eall`}>\r\n                            <img alt='' className=\"mr6\" src={staffIcon}/>人员管理</Link>\r\n                        </MenuItem>\r\n                        <MenuItem onClick={params=>this.selectDept(params)} key=\"deptless-2\"><Link to={`/manage/capacity`}>\r\n                            <img alt=''  className=\"mr6\" src={capacityIcon}/>容量管理</Link>\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <div className=\"menu-dark\"></div>\r\n                    <div className=\"menu-btns\">\r\n                        <li onClick={this.createDept} className=\"btn cp\"><img alt='' src={addIcon}/>创建部门</li>\r\n                        <li onClick={this.rightTransfer}  className=\"btn cp\"><img alt='' src={mvUserIcon}/>权限移交</li>\r\n                    </div>\r\n                </div>:(\r\n                    this.state.cdAnddlbool?<Menu mode=\"inline\" theme=\"light\" openKeys={[this.state.menuOpenKeys]} selectedKeys={[this.state.menuSelectedKeys]}>\r\n                    <SubMenu   key=\"depts\" title={<span><img alt='' className=\"icon\" src={deptIcon}/>部门管理</span>}>\r\n                        <MenuItemGroup key=\"d1\">\r\n                            {this.props.deptList.map((d,i)=>{\r\n                                return <MenuItem onClick={params=>this.selectDept(params)} key={d.departmentId}>{d.name}</MenuItem>\r\n                                // return (<MenuItem onClick={params=>this.selectDept(params)} key={d.departmentId}>\r\n                                //     <Link to={{pathname:'/manage',query:{deptId:d.departmentId}}}>{d.name}</Link></MenuItem>)\r\n                            })}\r\n                        </MenuItemGroup>\r\n                    </SubMenu>\r\n                </Menu>:<div>暂无任何部门</div>)\r\n            }\r\n                {this.props.employeeModalState.createDeptModalVisible?<CDModal/>:null}\r\n                {this.props.employeeModalState.transferBRightModalVisible?<TBRModal trType={'ENTERPRISE_MANAGER'} mtitle={'移交企业管理员权限'}/>:null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Menubar","module.exports = __webpack_public_path__ + \"static/media/add-icon.853e7eb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/staff-icon.5595ae7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/capacity-icon.51298928.svg\";","module.exports = __webpack_public_path__ + \"static/media/dept-icon.07249125.svg\";","module.exports = __webpack_public_path__ + \"static/media/mv-user-icon.005e4a75.svg\";","//创建部门弹框\r\nimport React from 'react'\r\nimport {Modal,Button,Input} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport http from 'libs/http'\r\nimport {toggleModalState} from 'store/employeeModalReducer'\r\nimport {getDeptList} from 'store/deptReducer'\r\n@connect(\r\n    state=>{\r\n        return{\r\n            loginUser:state.userReducer\r\n        }\r\n    },\r\n    {toggleModalState,getDeptList}\r\n)\r\nclass CDModal extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            deptname:''\r\n        }\r\n        this.handleOk=this.handleOk.bind(this)\r\n        this.handleCancel=this.handleCancel.bind(this)\r\n        this.createDept=this.createDept.bind(this)\r\n    }\r\n    handleOk(){\r\n        //判空\r\n        if(this.state.deptname.length>0){\r\n            this.createDept()\r\n        }\r\n    }\r\n    createDept(){\r\n        http.post('enterprise/depts/create',{parentId:'0',deptName:this.state.deptname}).then(res=>{\r\n            if(res && res.status===200){\r\n                Modal.success({\r\n                    title: '系统提示',\r\n                    centered:true,\r\n                    content: '创建成功！',\r\n                })\r\n                this.props.toggleModalState('DEFAULT',false)\r\n                this.props.getDeptList({type:this.props.loginUser.userRole})\r\n            }\r\n        })\r\n    }\r\n    handleCancel(){\r\n       this.props.toggleModalState('DEFAULT',false)\r\n    }\r\n    render(){\r\n        return (\r\n            <Modal\r\n                width={300}\r\n                visible={true}\r\n                title=\"创建部门\" centered\r\n                onCancel={this.handleCancel}\r\n                footer={[\r\n                    <Button key='1'  onClick={this.handleCancel}>取消</Button>,\r\n                    <Button  key='2' type=\"primary\"  onClick={this.handleOk}>确认</Button>,\r\n                ]}\r\n                >\r\n                <Input  placeholder=\"请输入部门名称\" onChange={e=>this.setState({deptname:e.target.value})}/>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CDModal","//移交企业管理员权限权限\r\nimport React from 'react'\r\nimport {Modal,Button,message,Radio} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport http from 'libs/http'\r\nimport {authTimeout} from 'libs/common'\r\nimport {toggleModalState} from 'store/employeeModalReducer'\r\nimport {getMEL} from 'store/staffReducer'\r\nimport './modal.scss'\r\n\r\nmessage.config({top:99})\r\n@connect(\r\n    state=>{\r\n        return{\r\n            loginUser:state.userReducer,\r\n            mEmployee:state.staffReducer.mEmployee,\r\n            currentDept:state.deptReducer.currentDept\r\n        }\r\n    },\r\n    {toggleModalState,getMEL}\r\n)\r\nclass TRModal extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            //请求相关参数\r\n            isAllocation:'',//已分配1未分配-1,所有''\r\n            //limit:30,\r\n            limit:2,\r\n            page:1,\r\n            //用户列表，逐个拼接，加载更多\r\n            employeeArray:[],\r\n            lastPage:false,\r\n            total:0,\r\n            //选中的人\r\n            selectedUserArray:[],\r\n            userId:''\r\n        }\r\n        this.handleOk=this.handleOk.bind(this)\r\n        this.handleCancel=this.handleCancel.bind(this)\r\n        this.transferRight=this.transferRight.bind(this)\r\n        this.onChange=this.onChange.bind(this)\r\n        this.getMore=this.getMore.bind(this)\r\n        this.changgeSort=this.changgeSort.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        //这里为什么会执行两次（因为menubar中也引用了）\r\n        if(this.props.trType==='DEPT_DIRECTOR'){\r\n            //移交部门主管权限\r\n            this.getEmployee(null)\r\n        }else if(this.props.trType==='ENTERPRISE_MANAGER'){\r\n            //移交企业管理员权限\r\n            this.getEmployee(null)\r\n        }\r\n    }\r\n    //获取员工列表\r\n    getEmployee(params){\r\n        this.props.getMEL(params)\r\n    }\r\n    handleOk(){\r\n        if(this.state.userId==this.props.loginUser.id){\r\n            message.error('当前用户已经是企业管理员')\r\n        }else if(this.state.userId!==''){\r\n            this.transferRight()\r\n        }else{\r\n            message.error('请先选择员工')\r\n        }\r\n    }\r\n    //userId(天选之子)，moveUserId（自己的），moveType（移交那种权限），moveDeptId（存在多个部门管理者的情况，移交企业管理者权限 0）\r\n    transferRight(){\r\n        let params={\r\n            userId:this.state.userId,\r\n            moveUserId:this.props.loginUser.id,\r\n            //权限类型分为（0.：企业管理员1.：部门主管2.：部门管理员）\r\n            moveType:'0',\r\n            moveDeptId:'0',\r\n        }\r\n        http.post('enterprise/admin/move/power',params).then(res=>{\r\n            if(res && res.status===200){\r\n                this.props.toggleModalState('DEFAULT',false)\r\n                Modal.success({\r\n                    title: '系统提示',\r\n                    centered:true,\r\n                    content: '移交成功！即将返回官网首页'\r\n                })\r\n                // 操作成功之后跳回首页，清空缓存\r\n                setTimeout(()=>{\r\n                    authTimeout()\r\n                },3000)\r\n                \r\n            }\r\n        })\r\n    }\r\n    getMore(){\r\n        if(!this.state.lastPage){\r\n            this.getEmployee({\r\n                page:this.state.page+1,\r\n                isAllocation:this.state.isAllocation\r\n            })\r\n        }\r\n    }\r\n    componentWillReceiveProps(np){\r\n        const tp=this.props\r\n        // console.log(tp)\r\n        // console.log(np)\r\n        if(this.props.trType==='DEPT_DIRECTOR'){\r\n            //移交部门主管权限\r\n            this.propsChange(tp,np)\r\n        }else if(this.props.trType==='ENTERPRISE_MANAGER'){\r\n            //移交企业管理员权限\r\n            this.propsChange(tp,np)\r\n        }\r\n    }\r\n    propsChange(tp,np){\r\n        //第一次加载数据\r\n        if(!tp.mEmployee &&  np.mEmployee && np.mEmployee.object && np.mEmployee.object.length>0){\r\n            console.log('第一次加载数据')\r\n            const list=this.state.employeeArray.concat(np.mEmployee.object)\r\n            this.setState({\r\n                employeeArray:list,\r\n                page:np.mEmployee.currentPage,\r\n                total:np.mEmployee.total,\r\n                lastPage:list.length===np.mEmployee.total?true:false\r\n            })\r\n        }else if(tp.mEmployee &&  np.mEmployee && np.mEmployee.object && np.mEmployee.object.length>0){\r\n            //点击加载更多\r\n            console.log('点击加载更多')\r\n            const list=this.state.employeeArray.concat(np.mEmployee.object)\r\n            this.setState({\r\n                employeeArray:list,\r\n                page:np.mEmployee.currentPage,\r\n                total:np.mEmployee.total,\r\n                lastPage:list.length===np.mEmployee.total?true:false\r\n            })\r\n        }else if(np.mEmployee &&  np.mEmployee.total===0){\r\n            console.log('加载完所有数据')\r\n            this.setState({\r\n                employeeArray:[],\r\n                page:1,\r\n                total:0,\r\n                lastPage:true\r\n            })\r\n        }\r\n    }\r\n    changgeSort(e){\r\n        //改变查询条件时清空状态\r\n        this.setState({\r\n            isAllocation:e,\r\n            limit:30,\r\n            page:1,\r\n            employeeArray:[],\r\n            lastPage:false,\r\n        })\r\n        this.getEmployee({isAllocation:e})\r\n    }\r\n    onChange(e) {\r\n        this.setState({userId:e.target.value})\r\n    }\r\n    handleCancel(){\r\n        this.props.toggleModalState('DEFAULT',false)\r\n     }\r\n    render(){\r\n        //过滤当前企业管理员\r\n        let {employeeArray} = this.state\r\n        let newEmployeeArray = employeeArray.map(e=>{\r\n            let flag=e.userRoleInfos.some(role=>{\r\n                return role.roleName==='ENTERPRISE_MANAGER'\r\n            })\r\n            //is enterprise manager\r\n            e.isEM=flag?true:false\r\n            return e\r\n        })\r\n        return (\r\n            <Modal\r\n                width={300}\r\n                visible={true}\r\n                title={this.props.mtitle?this.props.mtitle:\"权限移交\"} centered\r\n                onCancel={this.handleCancel}\r\n                footer={[\r\n                    <Button key='1'  onClick={this.handleCancel}>取消</Button>,\r\n                    <Button  key='2' type=\"primary\"  onClick={this.handleOk}>确认</Button>,\r\n                ]}\r\n                >\r\n                <div className=\"add-staff-modal\">\r\n                    <div className=\"sort cp\">\r\n                        <div onClick={()=>this.changgeSort('')} className={this.state.isAllocation===''?'active':''}>所有成员</div>\r\n                        <div onClick={()=>this.changgeSort('-1')} className={this.state.isAllocation==='-1'?'active':''}>待分配</div>\r\n                    </div>\r\n                    <div className=\"radio-wrapper\">\r\n                        <Radio.Group style={{ width: '100%' }} onChange={this.onChange}>\r\n                            {newEmployeeArray.length>0?newEmployeeArray.map(e=>{\r\n                                return e.isEM?null:<div className=\"radio-class\" key={e.userId}><Radio  value={e.userId}>{e.name}</Radio></div>\r\n                            }):null}\r\n                        </Radio.Group>\r\n                        {this.state.total===0?<div className=\"tc\">暂无记录</div>:this.state.lastPage?null:<div className=\"cp theme-color tc\" onClick={this.getMore}>加载更多</div>}\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TRModal"],"sourceRoot":""}