{"version":3,"sources":["components/datagrid/datagrid.js","static/images/empty-icon.svg","static/images/dept-icon-person.svg","components/pie/pie.js","container/demployee/employee.js"],"names":["__webpack_require__","_antd","_reactRedux","_staffReducer","_react2","default","createElement","alt","src","emptyIcon","Datagrid","connect","state","employeese","staffReducer","staffData","object","selectedStaffList","togglePersonal","selectedStaff","React","Component","np","_this","this","emptyStyle","height","concat","props","tscale","display","alignItems","justifyContent","empty","style","_ref","rowSelection","selectedRowKeys","length","map","ss","key","onChange","selectRowKeys","selectRows","onSelect","record","selected","selectedRows","onSelectAll","isSlectedAll","changeRows","Table","calSelect","columns","tableHead","onRow","onClick","ap","filter","e","userId","onMouseEnter","size","tableSize","title","customHeader","locale","emptyText","pagination","rowClassName","className","dataSource","sourceData","scroll","y","module","exports","p","_react","echarts","Pie","_classCallCheck","_getPrototypeOf","call","setPieOption","bind","_assertThisInitialized","lastColor","usedColor","warnColor","data","type","name","pieData","params","Object","assign","pieChart","init","refs","container","options","setOption","lc","uc","wc","text","left","top","textStyle","color","fontSize","align","fontFamily","series","stillShowZeroSum","radius","avoidLabelOverlap","itemStyle","normal","percent","label","show","emphasis","labelLine","ref","width","pw","ph","_common","_employeeModalReducer","_deptReducer","Personal","_reactLoadable2","loader","then","t","loading","ADDSModal","DSModal","SDMModal","TDRModal","deptIconPerson","Icon","trType","mtitle","Employee","loginUser","userReducer","employeeModalState","employeeModalReducer","currentDept","deptReducer","deptList","toggleModalState","getStaffList","setCurrentDept","page","limit","searchName","deptId","sdmbool","getEmployees","addStaff","staffDetail","delStaff","toggleDeptDirect","transferRight","searchHandler","emitEmptySearchName","ah","window","screen","availHeight","console","log","setState","scale","departmentId","tp","userRole","bool","obj","trim","target","indexOf","_this2","tHead","dataIndex","render","pageData","employee","dmbool","bmbool","ddbool","departments","d","i","userRoleInfos","some","u","roleName","Avatar","getAvatar","cloudUserId","_ref2","_ref3","Popover","placement","content","dept","capa","spaceUsed","spaceTotal","phone","mobile","email","_pie2","value","departmentPicSpaceUsed","departmentSpaceTotal","_ref4","total","departmentSpaceUsed","Button","Input","prefix","_ref5","placeholder","suffix","onPressEnter","_datagrid2","Pagination","defaultCurrent","currentPage","showTotal","paginationTotal","pageChange","staffDetailModalVisible","_ref6","addStaffModalVisible","_ref7","delStaffModalVisible","_ref8","setDeptManagerModalVisible","transferDRightModalVisible","_ref9"],"mappings":"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","file":"static/js/9.718ac9b0.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Table} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {togglePersonal,selectedStaff} from 'store/staffReducer'\r\nimport emptyIcon from 'static/images/empty-icon.svg'\r\nimport './datagrid.scss'\r\n@connect(\r\n    state=>{\r\n        return{\r\n            employeese:state.staffReducer.staffData.object,\r\n            selectedStaffList:state.staffReducer.selectedStaffList\r\n        }\r\n    },\r\n    {togglePersonal,selectedStaff}\r\n)\r\nclass Datagrid extends React.Component{\r\n    componentWillReceiveProps(np){\r\n        //console.log(np)\r\n    }\r\n    render(){\r\n        const emptyStyle={\r\n            height:`${this.props.tscale*70}vh`,\r\n            display:'flex',\r\n            alignItems:'center',\r\n            justifyContent:'center'\r\n        }\r\n        const empty=(\r\n            <div style={emptyStyle}>\r\n                <div>\r\n                    <img alt='' src={emptyIcon}/>\r\n                    <p>暂无数据</p>\r\n                </div>\r\n            </div>\r\n        )\r\n        const rowSelection={\r\n            //操作选中状态\r\n            selectedRowKeys:this.props.selectedStaffList.length>0?this.props.selectedStaffList.map(ss=>{\r\n                return ss.key\r\n            }):[],\r\n            onChange:(selectRowKeys,selectRows)=>{\r\n                //console.log(`selectRowKeys:${selectRowKeys}`,\"selectRows:\"+selectRows)\r\n            },\r\n            //record当前选中的行,selected是否选中,selectedRows所有被选中的数据\r\n            onSelect:(record,selected,selectedRows)=>{\r\n                this.props.selectedStaff(selectedRows)\r\n            },\r\n            onSelectAll:(isSlectedAll,selectedRows,changeRows)=>{\r\n                this.props.selectedStaff(selectedRows)\r\n            }\r\n        }\r\n        return(<Table rowSelection={this.props.calSelect?rowSelection:null} columns={this.props.tableHead} \r\n            onRow={(record) => {\r\n                return {\r\n                  onClick: () => {\r\n                      let ap=this.props.employeese.filter(e=>{\r\n                          return e.userId===record.key\r\n                      })\r\n                      //查看员工详情，插入当前选中的员工记录\r\n                      this.props.togglePersonal(ap[0])\r\n                  },\r\n                  onMouseEnter: () => {}\r\n                }\r\n            }}\r\n            size={this.props.tableSize?this.props.tableSize:'default'}\r\n            title={this.props.customHeader?this.props.customHeader:null}\r\n            locale={{emptyText: empty }} \r\n            pagination={false} rowClassName='table-row-name' className='column-name' \r\n            dataSource={this.props.sourceData} scroll={{ y: `${this.props.tscale*70}vh` }}></Table>)\r\n    }\r\n}\r\n\r\nexport default Datagrid","module.exports = __webpack_public_path__ + \"static/media/empty-icon.1e6b2481.svg\";","module.exports = __webpack_public_path__ + \"static/media/dept-icon-person.84461699.svg\";","import React from 'react'\r\n// 引入 echarts 主模块。\r\nimport * as echarts from 'echarts/lib/echarts'\r\nimport 'echarts/lib/chart/pie'\r\nimport 'echarts/lib/component/title'\r\nimport 'echarts/lib/component/tooltip'\r\nimport './pie.scss'\r\nclass Pie extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.setPieOption = this.setPieOption.bind(this)\r\n        \r\n        this.state={\r\n            lastColor:'#E4E4E4',\r\n            usedColor:'#8198FC',\r\n            warnColor:'#FE5826',\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        // const data=[\r\n        //     {value:148,type:'used', name:'已使用'},\r\n        //     {value:400,type:'total', name:'剩余容量'}\r\n        // ]\r\n        const data=[\r\n            {type:'used', name:'已使用'},\r\n            {type:'total', name:'剩余容量'}\r\n        ]\r\n        let {pieData}=this.props\r\n        \r\n        //let params=pieData?[Object.assign(data[0],pieData[0]),Object.assign(data[1],pieData[1])]:data\r\n        let params=pieData?[Object.assign(data[0],pieData[0]),Object.assign(data[1],pieData[1])]:data\r\n        let pieChart=echarts.init(this.refs.container)\r\n        let options = this.setPieOption(params,this.state.lastColor,this.state.usedColor,this.state.warnColor,this.props.title)\r\n        pieChart.setOption(options)\r\n    }\r\n    setPieOption(data,lc,uc,wc,title) {\r\n        return {\r\n            title: {\r\n                text:title,\r\n                left:'center',\r\n                top:'center',\r\n                textStyle:{\r\n                  color:'#333',\r\n                  fontSize:14,\r\n                  align:'center',\r\n                  fontFamily: 'PingFangSC-Medium'\r\n                }\r\n            },\r\n            // tooltip : {\r\n            //     trigger: 'item',\r\n            //     formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            // },\r\n            series : [\r\n                {\r\n                    name: '比例',\r\n                    type: 'pie',\r\n                    stillShowZeroSum:false,\r\n                    radius: ['50%', '75%'],\r\n                    avoidLabelOverlap: false,\r\n                    data: data, //传入外部的data数据\r\n                    itemStyle:{\r\n                        normal:{\r\n                            color:function(params){\r\n                                //返回什么颜色，警告，已使用，剩余\r\n                                if(params.percent>80 && params.data.type==='used'){\r\n                                    return wc\r\n                                }else if(params.data.type==='used'){\r\n                                    return uc\r\n                                }else if(params.data.type==='total'){\r\n                                    return lc\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    label: {\r\n                        normal: {\r\n                            show: false\r\n                        },\r\n                        emphasis: {\r\n                            show: false\r\n                        }\r\n                    },\r\n                    labelLine: {\r\n                        normal: {\r\n                            show: false\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"pie-container-wrapper\">\r\n                {/*设置pw和ph为了响应式echarts */}\r\n                <div ref=\"container\" style={{width:`${this.props.pw?this.props.pw:'150'}px`,height:`${this.props.ph?this.props.ph:'150'}px`}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Pie","import React from 'react'\r\nimport './employee.scss'\r\n\r\n//部门管理员打开的员工列表\r\nimport deptIconPerson from 'static/images/dept-icon-person.svg'\r\nimport Datagrid from 'components/datagrid/datagrid'\r\nimport Pie from 'components/pie/pie'\r\nimport {Icon,Button,Input,Popover,Pagination,message,Avatar} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {paginationTotal,getAvatar} from 'libs/common'\r\nimport {toggleModalState} from 'store/employeeModalReducer'\r\nimport {getStaffList} from 'store/staffReducer'\r\nimport {setCurrentDept} from 'store/deptReducer'\r\nimport Loadable from 'react-loadable'\r\nconst Personal = Loadable({loader: () => import('components/personal/personal'),loading() {return null}})\r\nconst ADDSModal = Loadable({loader: () => import('components/modals/addsmodal'),loading() {return null}})\r\nconst DSModal = Loadable({loader: () => import('components/modals/dsmodal'),loading() {return null}})\r\nconst SDMModal = Loadable({loader: () => import('components/modals/sdmmodal'),loading() {return null}})\r\nconst TDRModal = Loadable({loader: () => import('components/modals/tdrmodal'),loading() {return null}})\r\n@connect(\r\n    state=>{\r\n        return{\r\n            //当前登录用户信息\r\n            loginUser:state.userReducer,\r\n            //已选择的用户列表\r\n            selectedStaffList:state.staffReducer.selectedStaffList,\r\n            //弹框状态\r\n            employeeModalState:state.employeeModalReducer,\r\n            //当前部门\r\n            currentDept:state.deptReducer.currentDept,\r\n            //用户列表数据（包括当前currentPage，total，object用户列表，）\r\n            employeese:state.staffReducer.staffData,\r\n            deptList:state.deptReducer.deptList,\r\n        }\r\n    },\r\n    {toggleModalState,getStaffList,setCurrentDept}\r\n)\r\nclass Employee extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            //表格缩放比例\r\n            tscale:1,\r\n            //请求相关参数\r\n            page:1,\r\n            limit:30,\r\n            searchName:'',\r\n            deptId:'',\r\n            //移除还是设置部门管理员\r\n            sdmbool:true\r\n        }\r\n        this.getEmployees=this.getEmployees.bind(this)\r\n        this.addStaff=this.addStaff.bind(this)\r\n        this.staffDetail=this.staffDetail.bind(this)\r\n        this.delStaff=this.delStaff.bind(this)\r\n        this.toggleDeptDirect=this.toggleDeptDirect.bind(this)\r\n        this.transferRight=this.transferRight.bind(this)\r\n        this.searchHandler=this.searchHandler.bind(this)\r\n        this.emitEmptySearchName=this.emitEmptySearchName.bind(this)\r\n    }\r\n    componentWillMount(){\r\n        let ah=window.screen.availHeight\r\n        console.log(ah)\r\n        if(ah>900){\r\n            this.setState({scale:1})\r\n        }else if(ah<900&&ah>800){\r\n            this.setState({tscale:0.88})\r\n        }else if(ah<800&&ah>700){\r\n            this.setState({tscale:0.70})\r\n        }else{\r\n            this.setState({tscale:0.65})\r\n        }\r\n        if(this.props.currentDept){\r\n            this.getEmployees({deptId:this.props.currentDept.departmentId})\r\n        }\r\n    }\r\n    componentWillReceiveProps(np){\r\n        let tp=this.props\r\n        //点击进入另一个部门\r\n        const anotherDept=tp.currentDept && np.currentDept　&& tp.currentDept.departmentId!==np.currentDept.departmentId\r\n        if(anotherDept){\r\n            this.getEmployees({deptId:np.currentDept.departmentId})\r\n        }\r\n        //部门管理员第一次进入管理后台，展开第一个部门\r\n        if(tp.loginUser.userRole!=='' && !tp.currentDept && !np.currentDept){\r\n            //只有一个部门，自己是主管，自己把自己移除了\r\n            if(np.deptList && np.deptList.length>0){\r\n                tp.setCurrentDept(np.deptList[0])\r\n                this.getEmployees(np.deptList[0].departmentId)\r\n            }\r\n        }\r\n        //删除部门之后重新获取员工列表\r\n        if(tp.currentDept && tp.currentDept!==np.currentDept){\r\n            this.getEmployees({deptId:np.currentDept.departmentId})\r\n        }\r\n        if(!tp.currentDept && np.currentDept){\r\n            this.getEmployees({deptId:np.currentDept.departmentId})\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    }\r\n    //设置或者移除部门主管\r\n    toggleDeptDirect(bool){\r\n        console.log(bool)\r\n        this.setState({sdmbool:bool})\r\n        this.props.toggleModalState('SET_DEPT_MANAGER',true)\r\n    }\r\n    //获取员工列表\r\n    getEmployees(obj){\r\n        let p={\r\n            page:this.state.page,\r\n            limit:this.state.limit,\r\n            searchName:this.state.searchName,\r\n            //当前部门ID\r\n            deptId:this.props.currentDept?this.props.currentDept.departmentId:0\r\n        }\r\n        let params=obj?Object.assign(p,obj):p\r\n        this.props.getStaffList(params)\r\n    }\r\n    searchHandler(){\r\n        if(this.state.searchName.trim()!==''){\r\n            this.getEmployees()\r\n        }\r\n    }\r\n    emitEmptySearchName(){\r\n        this.setState({searchName:''})\r\n        //setState是异步的，这里特殊处理下\r\n        this.getEmployees({searchName:''})\r\n    }\r\n    delStaff(e){\r\n        if(e.target.className==='del-staff-btn'){\r\n            this.props.toggleModalState('DEL_STAFF',true)\r\n        }\r\n    }\r\n    staffDetail(e){\r\n        //阻止冒泡的一种方式\r\n        if(e.target.className.indexOf('sd-class')>-1){\r\n            this.props.toggleModalState('STAFF_DETAIL',true)\r\n        }\r\n    }\r\n    \r\n    transferRight(){\r\n        this.props.toggleModalState('TRANSFER_D_RIGHT',true)\r\n    }\r\n    addStaff(){\r\n        this.props.toggleModalState('ADD_STAFF',true)\r\n    }\r\n    render(){\r\n        const tHead=[{\r\n            title:\"员工\",\r\n            dataIndex:'name',\r\n            render:text=><div className=\"cp\">{text}</div>\r\n        },{\r\n            title:\"所在部门\",\r\n            dataIndex:'dept',\r\n        },{\r\n            title:\"容量\",\r\n            dataIndex:'capa',\r\n        },{\r\n            title:\"手机号\",\r\n            dataIndex:'phone',\r\n        },{\r\n            title:\"邮箱\",\r\n            dataIndex:'email',\r\n        }]\r\n        let pageData=this.props.employeese.object && this.props.employeese.object.length!==0?this.props.employeese.object.map(employee=>{\r\n            let deptList=employee.departments.length>0?employee.departments.map((d,i)=>{\r\n                return i>0 ?`、${d.name}`:d.name\r\n            }):'待分配'\r\n            //dept manage boolean(是否是当前部门部门主管)\r\n            //dept director boolean(是否是当前部门部门管理员)\r\n            //business manage boolean(是否是当前企业管理员)\r\n            let  dmbool,bmbool,ddbool\r\n            if(employee.userRoleInfos.length>0){\r\n                dmbool= employee.userRoleInfos.some((u)=>{\r\n                    return u.departmentId===this.props.currentDept.departmentId && u.roleName==='DEPT_MANAGER'\r\n                })\r\n                ddbool= employee.userRoleInfos.some((u)=>{\r\n                    return u.departmentId===this.props.currentDept.departmentId && u.roleName==='DEPT_DIRECTOR'\r\n                })\r\n                bmbool= employee.userRoleInfos.some((u)=>{\r\n                    return u.roleName==='ENTERPRISE_MANAGER'\r\n                })\r\n            }\r\n            return {\r\n                key: employee.userId,\r\n                name: <div className=\"tr-content sd-class\" onClick={this.staffDetail}>\r\n                        <div>\r\n                            <Avatar src={getAvatar(employee.cloudUserId)}></Avatar>\r\n                            <span className=\"ml8\">{employee.name}</span>\r\n                            {/**显示角色（部门主管，企业管理员） */}\r\n                            {bmbool?<span  className=\"ml6 role-tip\">企业管理员</span>:null}\r\n                            {dmbool?<span  className=\"ml6 role-tip\">部门管理员</span>:null}\r\n                            {ddbool?<span  className=\"ml6 role-tip\">部门主管</span>:null}\r\n                        </div>\r\n                        {/**企业管理者不能操作？，就是这样 */}\r\n                        {this.props.loginUser.userRole===\"enterprise\"?null:<Popover placement=\"leftTop\" content={\r\n                            <div className=\"cp\">\r\n                                {/**部门主管不能被设置为部门管理员 */}\r\n                                {!ddbool?(dmbool?(<p onClick={()=>this.toggleDeptDirect(false)}>移除部门管理员</p>):(<p onClick={()=>this.toggleDeptDirect(true)}>设为部门管理员</p>)):null}\r\n                                {/* 部门管理员没有移交的权限 */}\r\n                                {dmbool || ddbool?null:<p onClick={this.transferRight}>移交部门主管</p>}\r\n                                {/**企业管理员不能移除自己，只能通过权限移交 */}\r\n                                {/* {bmbool?null:<p className=\"del-staff-btn\" onClick={this.delStaff}>移除员工</p>} */}\r\n                                <p className=\"del-staff-btn\" onClick={this.delStaff}>移除员工</p>\r\n                            </div>\r\n                        }><Icon style={{display:'flex',alignItems:'center',fontSize: '20px'}} type=\"dash\" /></Popover>}\r\n                    </div>,\r\n                dept: <div className=\"ellipsis cp deptList sd-class\" onClick={this.staffDetail} title={deptList}>{deptList}</div>,\r\n                capa: <div>已用{employee.spaceUsed}/共{employee.spaceTotal}G</div>,\r\n                phone: employee.mobile || '未绑定',\r\n                email: employee.email || '未绑定',\r\n            }\r\n        }):[]\r\n        \r\n        return(\r\n            <div className=\"dept-data-wrapper\">\r\n                <div className=\"toolbar\">\r\n                    <div className=\"dept-name-count\">\r\n                        <div className=\"icon-wrapper\">\r\n                            {this.props.currentDept?<Pie\r\n                            pieData={[\r\n                                {value:this.props.currentDept.departmentPicSpaceUsed},\r\n                                {value:this.props.currentDept.departmentSpaceTotal-this.props.currentDept.departmentPicSpaceUsed}\r\n                            ]} pw={60} ph={60} title={''}  />:<img alt='' src={deptIconPerson}/>}\r\n                        </div>\r\n                        <div className=\"name-count\">\r\n                            <h4  className=\"name\">\r\n                                {this.props.currentDept?this.props.currentDept.name:'未定义'}\r\n                                （共{this.props.employeese.total}人）\r\n                            </h4>\r\n                            <div>{this.props.currentDept?`已使用${this.props.currentDept.departmentSpaceUsed}/共${this.props.currentDept.departmentSpaceTotal}G`:`已使用0G/共0G`}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"operations\">\r\n                        <div className=\"oper-wrapper\">\r\n                            <Button onClick={this.addStaff}>添加员工</Button>\r\n                        </div>\r\n                        <div className=\"search-wrapper\">\r\n                            <Input prefix={<Icon type=\"search\"/>} placeholder='请输入关键字查询'\r\n                            suffix={this.state.searchName ? <Icon type=\"close-circle\" onClick={this.emitEmptySearchName} /> : null}\r\n                            onChange={e=>this.setState({searchName:e.target.value})}  value={this.state.searchName}\r\n                            onPressEnter={this.searchHandler}/>\r\n                            <Button onClick={this.searchHandler}>查询</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* {this.props.selectedStaffList.length>0?<div className=\"batch-btns\">\r\n                    <Button onClick={this.delStaff} size=\"small\"><img src={deleteIcon} className=\"icon\" alt=''/>删除员工</Button>\r\n                </div>:null} */}\r\n                <div className=\"datagrid-wrapper demp\">\r\n                    <Datagrid calSelect={false} tscale={this.state.tscale} tableHead={tHead} sourceData={pageData}/>\r\n                </div>\r\n                {this.props.employeese.total>0?<div className=\"pagenation-wrapper\">\r\n                    {/*自定义跳转到需要LocaleProvider，showQuickJumper*/}\r\n                    <Pagination\r\n                        defaultCurrent={this.props.employeese.currentPage} total={this.props.employeese.total} \r\n                        showTotal={()=>paginationTotal(this.props.employeese.total,this.props.employeese.currentPage)}\r\n                        onChange={this.pageChange}/>\r\n                </div>:null}\r\n                {/**一些模态框 */}\r\n                {this.props.employeeModalState.staffDetailModalVisible?<Personal/>:null}\r\n                {this.props.employeeModalState.addStaffModalVisible?<ADDSModal/>:null}\r\n                {/* 传入当前部门id */}\r\n                {this.props.employeeModalState.delStaffModalVisible?<DSModal />:null}\r\n                {this.props.employeeModalState.setDeptManagerModalVisible?<SDMModal bool={this.state.sdmbool}/>:null}\r\n                {this.props.employeeModalState.transferDRightModalVisible?<TDRModal trType={'DEPT_DIRECTOR'} mtitle={'移交部门主管权限'}/>:null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employee"],"sourceRoot":""}